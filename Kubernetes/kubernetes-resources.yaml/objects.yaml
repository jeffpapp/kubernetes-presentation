apiVersion: v1
kind: Namespace
metadata:
  name: kubernetes-presentation
---
apiVersion: v1
kind: Pod
metadata:
  name: kubernetes-presentation-dotnet
  namespace: kubernetes-presentation
spec:
  containers:
    - name: kubernetes-presentation-dotnet
      image: kubernetes-presentation-dotnet:latest
      imagePullPolicy: Always
      ports:
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-presentation-dotnet
  namespace: kubernetes-presentation
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kubernetes-presentation-dotnet
  template:
    metadata:
      labels:
        app: kubernetes-presentation-dotnet
    spec:
      containers:
        - name: kubernetes-presentation-dotnet
          image: squareikubernetespresentation.azurecr.io/kubernetes-presentation-dotnet:1.0.0
          imagePullPolicy: Always
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: kubernetes-presentation-dotnet
  namespace: kubernetes-presentation
spec:
  selector:
    app: kubernetes-presentation-dotnet
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: kubernetes-presentation-dotnet
  namespace: kubernetes-presentation
spec:
  selector:
    app: kubernetes-presentation-dotnet
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: kubernetes-presentation
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: kubernetes-presentation
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetes-presentation-dotnet
  namespace: kubernetes-presentation
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kubernetes-presentation-dotnet
  template:
    metadata:
      labels:
        app: kubernetes-presentation-dotnet
    spec:
      containers:
        - name: kubernetes-presentation-dotnet
          image: squareikubernetespresentation.azurecr.io/kubernetes-presentation-dotnet:1.0.0
          imagePullPolicy: Always
          env:
            - name: Redis__Enabled
              value: "true"
            - name: Redis__Connection
              value: "redis.kubernetes-presentation"
          ports:
            - containerPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kubernetes-presentation-dotnet
  namespace: kubernetes-presentation
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - kubernetes-presentation.squarei.com
      secretName: kubernetes-presentation-tls
  rules:
    - host: kubernetes-presentation.squarei.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kubernetes-presentation-dotnet
                port:
                  number: 80
